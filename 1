事件原理Event Loop
    event loop，microtask，task queue
    target和currentTarget
    捕获阶段(capturing phase)：从根元素出发
    处理/目标阶段(target phase)：触发监听
    冒泡阶段(bubbling phase)：向根元素去
    事件委托/代理：省内存，动态绑定，方便管理
    DOM事件绑定3种方式：标签内，onclick（一次），addEventListener(可添加多次)
    event.target和event.currentTarget的区别：target返回触发事件的元素，currentTarget返回绑定事件的元素
    DOM事件的级别
            DOM0，element.onclick = function(){}
            DOM2，element.addEventListener('click', function(){}, false);
    DOM事件模型是什么：指的是冒泡和捕获
    DOM事件流是什么：捕获阶段 -> 目标阶段 -> 冒泡阶段
    Event对象常见应用
            event.preventDefault()，阻止默认行为
            event.stopPropagation()，阻止事件冒泡
            event.stopImmediatePropagation()，阻止剩余的事件处理函数执行并且防止事件冒泡到DOM树上，这个方法不接受任何参数。
    如何自定义事件
        var eve = new Event('自定义事件名');
        ev.addEventListener('自定义事件名', function(){
            console.log('自定义事件')
        });
        ev.dispatchEvent(eve);
    如何有效地对标签里面10000个image绑定click事件（考察事件冒泡机制）
    如何获得绑定事件的对象:                 getEventListeners
    当绑定事件时，this指针指向的是：        绑定事件的元素
    
闭包
    什么情况下需要使用函数闭包？
调用栈，
Promise
    promise的实现原理，进一步会问async、await是否使用过
    Promise对象(前端异步解决方案进化史，generator函数，async函数)
    generator的实现
    项目里Promise的使用

ES6常用特性
    变量定义(let和const,可变与不可变，const定义对象的特殊情况)
    解构赋值
    模板字符串
    数组新API(例：Array.from(),entries(),values(),keys())
    箭头函数(rest参数，扩展运算符，::绑定this)
        没有 this、super、arguments、new、prototype
        箭头函数this？ 
    Set和Map数据结构(set实例成员值唯一存储key值，map实例存储键值对(key-value))
    Class语法糖(super关键字)
        ES6 class原理?
    ES6怎么编译成ES5,css-loader原理,过程
    ES6转成ES5的常见例子
    babel把ES6转成ES5或者ES3之类的原理是什么，有没有去研究。
工程化
    对前端的理解
    前端架构的理解
    前端框架的看法
    如何做前后端分离
    7.JS模块化Commonjs,UMD,CMD规范的了解，以及ES6的模块化跟其他几种的区别，以及出现的意义。
webpack    
    webpack按需加载怎么实现？
    webpack打包原理？
    webpack打包是如何处理css图片的？
    如何写webpackPlugin/loader？
    webpack.load的原理
        loaders是你用在app源码上的转换元件。他们是用node.js运行的，把源文件作为参数，返回新的资源的函数。
    webpack工具和node了解哪些?node各个模块的底层原理?
    这个我看过一本书《深入浅出webpack》，所以基本都能回答上来。包括原理和编写loader、Plugin注意事项。当然，我自己没有写过。。。《深入浅出webpack》
    require.js的实现原理？  加载时通过document.createElement的方法引入dom中
    webpack的入口文件怎么配置？多个入口怎么分割？
    @babel/plugin-transform-runtime 的作用？    启用babel-runtime
    babel-polyfill和babel-runtime的区别?
        1.babel:转换语法
        2.babel-polyfill:会对新api进行转换
            2.1.babel-runtime只会对es6的语法进行转换，而不会对新api进行转换。    
    stage-1，stage-2，stage-3，这个问题回答还算清楚。
    3.我看到你的webpack配置用到webpack.optimize.UglifyJsPlugin这个插件，有没有觉得压缩速度很慢，有什么办法提升速度。
    2.有没有去研究webpack的一些原理和机制，怎么实现的。loader,他的原理
性能优化    
    无线性能优化
    页面DOM节点太多，会出现什么问题？如何优化？
    直接操作dom性能问题，怎么优化?
    雪碧图，
    移动端响应式图片
        1.JS或者服务端硬编码，resize事件，判断屏幕大小加载不同的图片
        2.img srcset 方法
        3.picture标签 -> source
        4.svg
    HTTP压缩gzip   
    HTML优化：
        使用语义化标签
        减少iframe：iframe是SEO的大忌，iframe有好处也有弊端
        避免重定向
         减少HTTP请求
    CSS优化：哪些css会影响性能
        压缩
        布局代码写前面
        删除空样式
        不滥用浮动，字体，需要加载的网络字体根据网站需求再添加
        选择器性能优化
        避免使用表达式，避免用id写样式
    js优化：
        压缩
        减少重复代码
        图片优化：
        使用WebP
        图片合并，CSS sprite技术
        减少DOM操作（事件代理、fragment）
        缓存已经访问过的元素
        "离线"更新节点, 再将它们添加到树中
        避免使用 js 输出页面布局--应该是 CSS 的事儿
        使用JSON格式来进行数据交换
    使用CDN加速静态资源,CDN原理及应用
    使用HTTP缓存：添加 Expires 或 Cache-Control 信息头
    静态资源或者接口等如何做缓存优化？
    浏览器缓存机制(重点，绝对是)
        200 From cache和200 ok区别（强缓存）
        Expires：(HTTP 1.0的东西,现在基本不用)
        Cache-Control（覆盖Expires）：max-age标记过期
        协商缓存和强制缓存的区别?
                Last-Modified（秒级）：
                If-Modified-Since（请求更新的时刻）：服务器拿去比对，可能会产生304（无修改）
            Etag（覆盖Last-Modified）：标记某时刻版本（内容不变就算时间变了它也不变），让时刻精确到毫秒级
            If-None-Match（让服务器比较etag）
    使用DNS预解析（dns原理、优化）
        1.meta开启: <meta http-equiv="x-dns-prefetch-control" content="on" />
        2.link开启: <link rel="dns-prefetch" href="http://bdimg.share.baidu.com" />
安全问题
    XSS与CSRF介绍
        XSS是一种跨站脚本攻击，是属于代码注入的一种，攻击者通过将代码注入网页中，其他用户看到会受到影响(代码内容有请求外部服务器);
        CSRF是一种跨站请求伪造，冒充用户发起请求，完成一些违背用户请求的行为(删帖，改密码，发邮件，发帖等)
        防御方法举例:
            对一些关键字和特殊字符进行过滤(<>,?,script等)，或对用户输入内容进行URL编码(encodeURIComponent);
            Cookie不要存放用户名和密码，对cookie信息进行MD5等算法散列存放，必要时可以将IP和cookie绑定;
    https握手加密过程,证书用途（驾驶证）
        B:我支持A加密算法和B加密算法https的TLS/SSL
        S:我的证书给你,保险箱也给你
        B:你的证书合法，用来计算hash的密码我放保险箱里了，这个消息的hash也放里面了，你看一下有没有被篡改，没有的话我们就用那个密码
        S:没有被篡改，我东西放保险箱了
        B:我拿到了,也解密出来了，没什么问题，以后我们就用这个密码就好了
    xss攻击原理，几种形式,防范手段,过滤哪些字符?
        两种：反射型、存储型        
        防御：①转义 ②DOM解析白名单 ③第三方库 ④CSP
    xsrf原理,实例,防范手段(Laravel的token)
    Sql注入
封装、继承和多态
    JS中this是什么?如何改变this?
    es5和es6的实现方式
    说一下原型链，对象，构造函数之间的一些联系？
    还有es6的实现方式。一般这样就回答差不多了。后来网易还接着问，es5如何实现super关键字。看过babel转换后代码，但是这个。。真的忘记看了。大概说了下自己的实现思路，也就是装饰着模式。然后也就浑过这题了。
    object的prototype是什么？（接上一个问题）
    JS如何实现数据以及功能的封装。（即类是如何实现的）
    JS实现继承的几种方式
        1.原型链、2.构造函数、3.组合继承、4.寄生组合继承  的优缺点和实现方式？
            1.Child2.prototype = new Parent2();//原型对象的属性是共享的
            2.function Child1(){Parent1.call(this);}//无法继承Parent1的原型对象（这是部分继承）
            3.function Child3(){Parent3.call(this);}
              Child3.prototype = Object.create(Parent3.prototype);
              Child3.prototype.constructor = Child3;
   创建对象的3种方法
        1.字面量      var o1 = {name: "o1"}
        2.构造函数   2.1.var o2 = new Object({name: "o2"})
                    2.2.var M = function(name){ this.name = name };        var o3 = new M("o3")
        3.Object.create({name: "p"})
    9.当new Foo()时发生了什么
        1.新的空对象
        2.新的空对象 原型 指向构造函数的原型
        3.新的空对象 this 绑定
        4.返回 （优先返回原对象的返回）
    函数声明和变量声明
        四种绑定规则
Virtual DOM，Diff 算法
    虚拟dom
    vue构建过程原理,具体流程
    vue.js和react.js异同点，如果让你选框架，你怎么怎么权衡这两个框架，分析一下。
    主要是发布订阅的设计模式，还有就是ES5的Object.defineProperty的getter和setter机制
    介绍vue的优缺点
    vuex原理,watch对象
    vue2新增内容?独立构建（standalone）和运行时构建（runtime-only）的差别和应用?
    template模板经过parse处理后返回AST 获得一棵AST后再经过generate()生成渲染函数-> 虚拟DOM patch函数，负责把虚拟DOM变为真正DOM。
    8.说一下Vue实现双向数据绑定的原理，
    MVC、MVVM、mvp了解么，数据双向绑定和单向绑定实现方式、优缺点
    单向数据流和mvc之类的对比 
移动端布局
    左右布局：左边定宽、右边自适应，不少于3种方法
    7.rem布局的优缺点
    2.移动布局方案
    click(会等看是不是要双击）、touch（拖动）、tap（立即点击）
浏览器渲染原理
        从 url到页面展现过程
        HTML被解析成DOM Tree，CSS被解析成CSS Rule Tree
        把DOM Tree和CSS Rule Tree经过整合生成Render Tree（布局阶段）
        元素按照算出来的规则，把元素放到它该出现的位置，通过显卡画到屏幕上
        1.浏览器工作原理
        2.浏览器解析过程
    http三次握手后拿到HTML，浏览器怎么加载
    从过程到不同内核差异（差异部分简单提了下）说了下dom、CSSDom以及paint等过程
    重绘和回流的理解/避免
手写代码（Array、String、prototype）
    'abcd'.f() => 'd-c-b-a'
    map forEach细节
常用函数 
    bind (好多家都考……)，throttle, debounce
    深拷贝的实现原理
    实现extend函数
    5.什么是函数柯里化？以及说一下JS的API有哪些应用到了函数柯里化的实现？
        JS中bind函数和数组的reduce方法用到了函数柯里化。
一些算法 
    讲讲时间复杂度计算?
    假定26个字母对应1-26,将一串数字转成字母有多少种可能?
    暴力解法复杂度是多少?
    二分查找的时间复杂度怎么求，是多少
    单链表反转
    线性顺序存储结构和链式存储结构有什么区别？以及优缺点。
    给定一个数组排序，使得奇数位的值不大于相邻偶数位的值。
    数组去重
        ES6实现：[...new Set([1,2,3,1,'a',1,'a'])]
        ES5实现：[1,2,3,1,'a',1,'a'].filter(function(ele,index,array){    return index===array.indexOf(ele)})
    各类排序算法以及复杂度计算
    排序,找出最大三个数
    快排原理,复杂度计算
    BST二叉排序树遍历
    数组找公共元素
    MD5摘要算法其他用途
    加油站问题(贪心算法)
    hash算法实现,如何避免冲突,如何在冲突里检测
    
git命令，如何批量删除分支
    git branch |grep 'branchName' |xargs git branch -D,从分支列表中匹配到指定分支，然后一个一个(分成小块)传递给删除分支的命令，最后进行删除。(参考这里)
    4.git大型项目的团队合作，以及持续集成啥的。
CSS盒模型 
    box-sizing控制？    怪异盒模型（IE）、标准盒模型 
    box-sizing的应用场景？    设为border-box可以不让溢出父元素
    说一下一个未知宽高元素怎么上下左右垂直居中。
    水平居中有哪些实现方式？
    垂直居中有哪些实现方式？
    三栏布局 四栏布局
    css实现自适应正方形?
    css画直角三角形还是等腰三角形
    css编写注意事项？ 位置 命名 id 格式（单位略，引号略，HEX小写，属性顺序）注释等
    CSS写轮播
    css常用布局 盒模型包括怪异盒模型，定位布局，流布局，浮动布局，flex（重点）和grid布局，包括还有三栏布局中的圣杯和双飞翼。
    CSS3新特性
    CSS3实现卡片翻转?
    
websocket说一下你的理解以及你所了解的特性。    

你做的这个项目有哪些模块？你主要负责哪些？你在项目中做的觉得得意和出色的点？介绍一下在项目中遇到的难点、遇到的坑，你又是怎么填坑的？可以改进的地方？

2.一个业务场景，面对产品不断迭代，以及需求的变动该怎么应对，具体技术方案实现。
    ① 怎么获取一个元素到视图顶部的距离。
    ② getBoundingClientRect获取的top和offsetTop获取的top区别
    ③事件委托
1.业务场景：比如说百度的一个服务不想让阿里使用，如果识别到是阿里的请求，然后跳转到404或者拒绝服务之类的？
    考察http协议头Referer，然后怎么判断是阿里的ip或者啥的，我也不太清楚。

5.分析一下移动端日历，PC端日历以及桌面日历的一些不同和需要注意的地方。
7.怎么实现草稿，多终端同步，以及冲突问题？
9.常见兼容性问题,列举(移动端/PC端)类似百度搜索的提示框，兼容各大浏览器，可用键盘控制.
1.Ajax原理，原生Ajax实现过程，XHR具体底层原理和API
    发送ajax请求有多少个步骤？如何判定发送成功？（onreadystatechange里的readyState）
    XMLHTTPRequest浏览器兼容性的处理方案？
    Ajax的状态值readyState：
        0: (未初始化)还没有调用send()方法。
        1: (载入)已经调用send()方法，正在派发请求。
        2: (载入完成)send()已经执行完成，已经接收到全部的响应内容。
        3: (交互)正在解析响应内容。
        4: (完成)响应内容已经解析完成，用户可以调用。

1.Dom增删改查
还有哪些即时通信？
    1.Comet技术：基于HTTP长连接的Web端实时通信技术
    2.SSE（Server-sent Events）：服务器发送事件,使用长链接进行通讯

4.服务器代理转发如何处理cookie(nginx)
    proxy_cookie_domain localhost example.org;
    proxy_cookie_domain ~\.([a-z]+\.[a-z]+)$ $1;
    proxy_cookie_path /one/ /;
    proxy_cookie_path / /two/;

实现动画有哪些途径: CSS3 JS帧动画,setTimeout,requestAnimateFrame Canvas动画 SVG图片、svg与canvas
    动画：setTimeout何时执行，requestAnimationFrame的优点
    为什么动画推荐用c3而不是js，这个问题当时并没有回答好，大概就是从性能上扯了扯，但是什么占用主线程以及浏览器对c3加速都没聊到，浏览器怎么优化动画的？
    animation和transiton的相关属性

设计模式(要求说出如何实现,应用,优缺点):
    工厂模式 发布订阅模式
    单例模式实现
如何写一个CSS库,要注意哪些东西?
promiseAll如何实现,以及如何实现多层异步回调?
node多线程如何实现？多线程如何保障各个线程的安全?
爬虫的实现原理?如何实现一个爬虫,如何解析文件?如何解决爬虫慢的问题?
对于js这门语言你认为怎么样
说说CSS重要难点?
说说HTML难点

                
三种隐藏方式差别:visibility:hidden,display:none,opacity:0
    1.display:none物理消失 立即消失（无动画）
    2、visibility:hidden：视觉消失 不可触发事件 等会消失（同transition设置的时间），无动画
    3、opacity:0：视觉消失 可触发事件 有动画 
inline和block元素列举,block和inline-block区别?
    内联元素包含块元素的表现?块元素和内联元素渲染区别?
span包含12px大小英文'abc',问span高度?baseline怎么理解?
px/em/rem的区别
string查找第一个不重复字符.如果换成字符串呢?
querySelectAll和ByClassName所获取元素的区别?如何绑定事件?
getComputedStyle用法?
正则匹配电话号码.exec,match,search用法?
function rest参数长度?function.length如何判断与arguments对象长度区别?
数组查某个字符出现次数
选择器权值
右键菜单定制
函数不定参
setTimeout原理
求最大子数组和.
ul li实现计数.
JPG,png图片特点,场景
拖拽组建
PV统计
URL监听变化
    1.数组操作
    3.动态规划(书包问题)
    4.编程题(正则)
栈封装,利用栈对数组reverse(编程)
Node的一些用法
JS内部属性
页面之间传参
出入栈可能性计算

在不使用后端模板渲染的情况下,如何做前端数据直出(不使用异步请求数据)?
SSR适用什么场景?SPA首屏空白原因?

前端路由的原理
    路由：根据url切页面
    使用在：后端不给前端路由的单页应用上，前端只能自己路由
    方法1：HTML5的HistoryAPI：history.pushState 和 history.replaceState，两个 API 都会操作浏览器的历史记录，而不会引起页面的刷新。
    方法2：Hash：url中的# , 在onhashchange事件，hash改变历史记录会记录
    比前端路由：更快

Restful是什么，如何设计？
        PUT(使用动词http方法) HTTPS://hostname/V1(加入版本号)/articial(只用名词)? type=img(协商格式)
        返回：401（用状态码描述结果）

script标签的defer、async的区别
    defer阻塞的     async异步的可同时加载的与html同步加载的
跨域通信的几种方式
    当使用隐藏框架实现跨域请求时，如果框架页跟当前页不属于同个父域，是否可以实现跨域？
    跨域的js运行错误可以捕获吗，错误提示什么，应该怎么处理？ 可以。
        Script error
        1.在script标签增加crossorigin属性
        2.设置js资源响应头Access-Control-Allow-Orgin:*
    JSONP原理
    Hash
    postMessage原理
    WebSocket
    CORS:heade信息字段都说了一遍

错误监控：
    即时运行错误 的捕获方式：    try...catch、window.onerror
    资源加载错误 的捕获方式：    object.onerror（如img,script）、performance.getEntries()、Error事件捕获
    上报：Ajax上报、Image的src上报

UTF-8和Unicode的区别：Unicode:统一地区性文字编码，UTF-8:一种unicode,解决网络传输（每次8个位传输数据），ASCII-> GBK-> Unicode-> UTF-8

防止重复发送Ajax请求
    用户点击之后按钮disabled;
    函数节流 防抖
    abort掉上一个请求。

图片懒加载：要加载就吧src放进去
图片预加载：偷偷先加载好，加载了但偏移到看不到的地方

数据类型判断的方法,toString判断的来源?注意事项以及优缺点
    a instanceof Array; 
    a.constructor === Array; 
    Array.prototype.isPrototypeOf(a); 
    Object.getPrototypeOf(a) === Array.prototype; 
    Object.prototype.toString.apply(a) === '[object Array]';
    Array.isArray([]); // true

内存泄露的原因以及如何去手动释放内存
    XMLHttpRequest 泄漏发生在IE7-8,释放方法，将XMLHttpRequest实例对象设置为Null；
    DOM&BOM等COM对象循环绑定 泄漏发生在IE6-8，释放方法，切断循环引用，将对对象的应用设置为Null；
    setTimeout(严格上说不能算是泄露，是被闭包持有了，是正常的表现)，对于闭包中无用的变量可以使用delete操作符进行释放；
垃圾回收机制
    引用计数：没人用它就清除，要是互相引用的它就不知道怎么清除了
    标记清除：从根对象到达不了的变量就清除
    
sass常用特性: 变量(@color = #fff) 混合(Mixin) 内置函数(颜色，字符串，类型判断，数学) 循环 嵌套 运算 导入(@import)
meta和media 标签作用 
iterator
如何设计一些组件，原则是什么，你写过什么自豪或者眼前一亮的组件，大概从组合、复用、重复、测试、维护等方面说了下
a组件在b组件内，c组件在a组件内，如何让他渲染出来，a组件和c组件同级
post、get区别 99%的人都理解错了HTTP中GET与POST的区别
如何实现私有变量？说出一种方法即可。
100 * 100 的 Canvas 占内存多大？
HTML5新增了哪些内容或API，使用过哪些？
input和textarea的区别？          textarea多行，标签闭合，用row|col设置大小
用一个div模拟textarea的实现？   h5的属性contenteditable使div可编辑
移动设备将页面中的数字识别为电话号码的方法
BFC
    不与浮动元素重叠(解决边距重叠、清楚浮动)
    计算BFC的高度的时候，浮动元素也会参与计算
    生成 BFC:
        根元素
        overflow不为visible
        float不为none
        position为absolute或fixed
        display为inline-block、table-cell、table-caption、flex、inline-flex
IFC
对栅格布局系统的理解？  （行列）
1像素边框问题
实现页面加载进度条
实现拖拽功能，比如把5个兄弟节点中的最后一个节点拖拽到节点1和节点2之间
手写parseInt的实现：要求简单一些，把字符串型的数字转化为真正的数字即可，但不能使用JS原生的字符串转数字的API，比如Number()
编写分页器组件的时候，为了减少服务端查询次数，点击“下一页”怎样能确保还有数据可以加载（请求数据不会为空）？
高阶组件的作用
stateless组件(感觉主要是让我回答纯函数的概念)
怎么让组件适应不同场景
使用前端框架相对于使用jQuery带来哪些好处
如果有一个N条数据列表需要渲染，怎么样才能使浏览器不卡
给你做淘宝首页搜索框你会怎么做
数据库的索引作用、原理
MIME(多用途 互联网 邮件 扩展类型): 浏览器会自动使用指定应用程序来打开
HTTP 超文本传输协议 特点:简单 灵活 无连接 无状态
http相关(三次握手，四次挥手)
http2对比http1.x
    网易一面问题，说了下2.0的采用二进制格式、多路复用、报文头压缩、服务器主动推送还扯了websocket 然后网易接着问，报文头怎么压缩的

HTTP 常用的请求方法：
    GET - URL传参 2KB
    POST - 请求体传数据 8M
    PUT - 资源更新
HTTP状态码 
    1信息  2成功  3重定向 4客户端 5服务端
    204 No Content：没有新文档，浏览器应该继续显示原来的文档
    206 Partial Content：客户发送了一个带有Range头的GET请求，服务器完成了它
    301 Moved Permanently：所请求的页面已经转移至新的url
    302 Found：所请求的页面已经临时转移至新的url
    304 Not Modified：客户端有缓冲的文档并发出了一个条件性的请求，服务器告诉客户，原来缓冲的文档还可以继续使用。(重点: 304)    
    401 Unauthorized：请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用    
    502 & Bad Gateway: 错误的网关；
    503 & Service Unavailable: 服务器超载或正在维护，无法处理请求； 
    504 & Gateway timeout: 网关超时；
行内元素：a、b、span、img、input、strong、select、label、em、button、textarea
块级元素：div、ul、li、dl、dt、dd、p、h1-h6、blockquote
空元素：br、meta、hr、link、input、img
src与href的区别
    href 超链接
    src  下载嵌入当前标签位置 会阻塞
px和em的区别
   em继承父元素的字体大小    浏览器的默认字体高都是16px: 1em=16px
优雅降级(减少功能)和渐进增强(增加功能)
sessionStorage 、localStorage 和 cookie 之间的区别
cookie存储在哪里?(memory)  简单说下cookie的属性，
    (1)发到服务器
    (2)大小 4K 5M
    (3)有效期
    (4)作用域 同源同窗口   同浏览器
Web Storage与Cookie相比存在的优势：
    (1)大